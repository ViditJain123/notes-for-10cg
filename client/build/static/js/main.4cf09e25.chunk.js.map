{"version":3,"sources":["components/Login.js","components/notes/Nav.js","components/notes/Home.js","components/notes/CreateNote.js","components/notes/EditNote.js","components/Notes.js","App.js","serviceWorker.js","index.js"],"names":["Login","setIsLogin","user","setUser","useState","name","email","password","err","setErr","onChangeInput","e","value","target","onLogin","setOnLogin","style","visibility","opacity","className","onSubmit","async","preventDefault","res","axios","post","localStorage","setItem","data","token","response","msg","type","id","placeholder","required","onChange","autoComplete","onClick","username","Nav","to","clear","Home","notes","setNotes","setToken","searchTerm","setSearchTerm","getNotes","get","headers","Authorization","useEffect","getItem","filteredNotes","filter","note","title","toLowerCase","includes","content","map","key","_id","format","date","delete","error","window","location","href","deleteNote","CreateNote","setNote","history","useHistory","newNote","push","htmlFor","rows","EditNote","match","params","Date","toLocaleDateString","getNote","put","Notes","path","component","exact","App","isLogin","verified","console","log","checkLogin","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"8NAGe,SAASA,EAAT,GAA8B,IAAf,WAACC,GAAa,EACxC,MAAOC,EAAMC,GAAWC,mBAAS,CAACC,KAAM,GAAGC,MAAO,GAAGC,SAAU,MACxDC,EAAKC,GAAUL,mBAAS,IAEzBM,EAAgBC,IAClB,MAAM,KAACN,EAAD,MAAOO,GAASD,EAAEE,OACxBV,EAAQ,IAAID,EAAM,CAACG,GAAMO,IACzBH,EAAO,MAiCJK,EAASC,GAAcX,oBAAS,GACjCY,EAAQ,CACVC,WAAYH,EAAU,UAAY,SAClCI,QAASJ,EAAU,EAAI,GAG3B,OACG,6BAASK,UAAU,cACf,yBAAKA,UAAU,qBACV,qCACA,0BAAMC,SAzBEC,UAChBV,EAAEW,iBACF,IACI,MAAMC,QAAYC,IAAMC,KAAK,eAAe,CACxCnB,MAAOJ,EAAKI,MACZC,SAAUL,EAAKK,WAEnBJ,EAAQ,CAACE,KAAM,GAAIC,MAAO,GAAIC,SAAU,KACxCmB,aAAaC,QAAQ,aAAcJ,EAAIK,KAAKC,OAC5C5B,GAAW,GACb,MAAOO,GACLA,EAAIsB,SAASF,KAAKG,KAAOtB,EAAOD,EAAIsB,SAASF,KAAKG,QAe1C,2BAAOC,KAAK,QAAQ3B,KAAK,QAAQ4B,GAAG,cACpCC,YAAY,QAAQC,UAAQ,EAACvB,MAAOV,EAAKI,MACzC8B,SAAU1B,IAEV,2BAAOsB,KAAK,WAAW3B,KAAK,WAAW4B,GAAG,iBAC1CC,YAAY,WAAWC,UAAQ,EAACvB,MAAOV,EAAKK,SAC5C8B,aAAa,OACbD,SAAU1B,IAEV,4BAAQsB,KAAK,UAAb,SACA,wDACI,0BAAMM,QAAS,IAAMvB,GAAW,IAAhC,kBAEJ,4BAAKP,KAGd,yBAAKW,UAAU,uBAAuBH,MAAOA,GAC7C,wCACK,0BAAMI,SA3DKC,UACnBV,EAAEW,iBACF,IACI,MAAMC,QAAYC,IAAMC,KAAK,kBAAkB,CAC3Cc,SAAUrC,EAAKG,KACfC,MAAOJ,EAAKI,MACZC,SAAUL,EAAKK,WAEnBJ,EAAQ,CAACE,KAAM,GAAIC,MAAO,GAAIC,SAAU,KACxCE,EAAOc,EAAIK,KAAKG,KAClB,MAAOvB,GACLA,EAAIsB,SAASF,KAAKG,KAAOtB,EAAOD,EAAIsB,SAASF,KAAKG,QAiD1C,2BAAOC,KAAK,OAAO3B,KAAK,OAAO4B,GAAG,gBAClCC,YAAY,YAAYC,UAAQ,EAACvB,MAAOV,EAAKG,KAC7C+B,SAAU1B,IAEV,2BAAOsB,KAAK,QAAQ3B,KAAK,QAAQ4B,GAAG,iBACpCC,YAAY,QAAQC,UAAQ,EAACvB,MAAOV,EAAKI,MACzC8B,SAAU1B,IAEV,2BAAOsB,KAAK,WAAW3B,KAAK,WAAW4B,GAAG,oBAC1CC,YAAY,WAAWC,UAAQ,EAACvB,MAAOV,EAAKK,SAC5C8B,aAAa,OAAOD,SAAU1B,IAE9B,4BAAQsB,KAAK,UAAb,YACA,kDACI,0BAAMM,QAAS,IAAMvB,GAAW,IAAhC,eAEJ,4BAAKP,M,WCtFV,SAASgC,EAAT,GAA4B,IAAf,WAACvC,GAAa,EAOtC,OACI,gCACI,yBAAKkB,UAAU,QACX,4BAAI,kBAAC,IAAD,CAAMsB,GAAG,KAAT,oBAER,4BACI,4BAAI,kBAAC,IAAD,CAAMA,GAAG,KAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,WAAT,gBACJ,wBAAIH,QAbK,KACjBZ,aAAagB,QACbzC,GAAW,KAWwB,kBAAC,IAAD,CAAMwC,GAAG,KAAT,a,YCb5B,SAASE,IACtB,MAAOC,EAAOC,GAAYzC,mBAAS,KAC5ByB,EAAOiB,GAAY1C,mBAAS,KAC5B2C,EAAYC,GAAiB5C,mBAAS,IAEvC6C,EAAW5B,UACf,MAAME,QAAYC,IAAM0B,IAAI,YAAa,CACvCC,QAAS,CAAEC,cAAevB,KAE5BgB,EAAStB,EAAIK,OAGfyB,oBAAU,KACR,MAAMxB,EAAQH,aAAa4B,QAAQ,cACnCR,EAASjB,GACLA,GACFoB,EAASpB,IAEV,IAEH,MAaM0B,EAAgBX,EAAMY,OACzBC,GACCA,EAAKC,MAAMC,cAAcC,SAASb,EAAWY,gBAC7CF,EAAKI,QAAQF,cAAcC,SAASb,EAAWY,gBAGnD,OACE,oCACA,yBAAKxC,UAAU,cACX,2BACEa,KAAK,OACLE,YAAY,SACZtB,MAAOmC,EACPX,SAAWzB,GAAMqC,EAAcrC,EAAEE,OAAOD,OACxCO,UAAU,kBAGhB,yBAAKA,UAAU,gBAEZoC,EAAcO,IAAKL,GAClB,yBAAKtC,UAAU,OAAO4C,IAAKN,EAAKO,KAC9B,wBAAIN,MAAOD,EAAKC,OAAQD,EAAKC,OAC7B,yBAAKvC,UAAU,gBACb,2BAAIsC,EAAKI,UAEX,uBAAG1C,UAAU,QAAQ8C,YAAOR,EAAKS,OACjC,yBAAK/C,UAAU,eACZsC,EAAKpD,KACN,kBAAC,IAAD,CAAMoC,GAAE,eAAUgB,EAAKO,MAAvB,SAEF,4BAAQ7C,UAAU,QAAQmB,QAAS,IA3CxBjB,WACjB,IACMQ,UACIL,IAAM2C,OAAN,oBAA0BlC,GAAM,CACpCkB,QAAS,CAAEC,cAAevB,KAE5BoB,EAASpB,IAEX,MAAOuC,GACPC,OAAOC,SAASC,KAAO,MAkCsBC,CAAWf,EAAKO,MAAzD,S,WChEK,SAASS,IACpB,MAAOhB,EAAMiB,GAAWtE,mBAAS,CAC7BsD,MAAO,GACPG,QAAS,GACTK,KAAM,KAEJS,EAAUC,cAEVlE,EAAgBC,IAClB,MAAM,KAACN,EAAD,MAAOO,GAASD,EAAEE,OACxB6D,EAAQ,IAAIjB,EAAM,CAACpD,GAAMO,KAyB7B,OACI,yBAAKO,UAAU,eACX,2CACA,0BAAMC,SAxBKC,UACfV,EAAEW,iBACF,IACI,MAAMO,EAAQH,aAAa4B,QAAQ,cACnC,GAAGzB,EAAM,CACL,MAAM,MAAC6B,EAAD,QAAQG,EAAR,KAAiBK,GAAQT,EACzBoB,EAAU,CACZnB,QAAOG,UAASK,QAOpB,aAJM1C,IAAMC,KAAK,aAAcoD,EAAS,CACpC1B,QAAS,CAACC,cAAevB,KAGtB8C,EAAQG,KAAK,MAE1B,MAAOtE,GACL6D,OAAOC,SAASC,KAAO,MAOKlC,aAAa,OACrC,yBAAKlB,UAAU,OACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAO/C,KAAK,OAAOpB,MAAO6C,EAAKC,MAAOzB,GAAG,QACzC5B,KAAK,QAAQ8B,UAAQ,EAACC,SAAU1B,KAGpC,yBAAKS,UAAU,OACX,2BAAO4D,QAAQ,WAAf,WACA,8BAAU/C,KAAK,OAAOpB,MAAO6C,EAAKI,QAAS5B,GAAG,UAC9C5B,KAAK,UAAU8B,UAAQ,EAAC6C,KAAK,KAAK5C,SAAU1B,KAGhD,2BAAOqE,QAAQ,QAAf,SAA6BtB,EAAKS,KAAlC,KACA,yBAAK/C,UAAU,OACX,2BAAOa,KAAK,OAAOC,GAAG,OACtB5B,KAAK,OAAO+B,SAAU1B,KAG1B,4BAAQsB,KAAK,UAAb,UCzDD,SAASiD,EAAT,GAA4B,IAAV,MAACC,GAAQ,EACtC,MAAOzB,EAAMiB,GAAWtE,mBAAS,CAC7BsD,MAAO,GACPG,QAAS,GACTK,KAAM,GACNjC,GAAI,KAEF0C,EAAUC,cAEhBvB,oBAAU,KACUhC,WACZ,MAAMQ,EAAQH,aAAa4B,QAAQ,cACnC,GAAG4B,EAAMC,OAAOlD,GAAG,CACf,MAAMV,QAAYC,IAAM0B,IAAN,qBAAwBgC,EAAMC,OAAOlD,IAAM,CACzDkB,QAAS,CAACC,cAAevB,KAE7B6C,EAAQ,CACJhB,MAAOnC,EAAIK,KAAK8B,MAChBG,QAAStC,EAAIK,KAAKiC,QAClBK,KAAM,IAAIkB,KAAK7D,EAAIK,KAAKsC,MAAMmB,qBAC9BpD,GAAIV,EAAIK,KAAKoC,QAIzBsB,IACF,CAACJ,EAAMC,OAAOlD,KAEhB,MAAMvB,EAAgBC,IAClB,MAAM,KAACN,EAAD,MAAOO,GAASD,EAAEE,OACxB6D,EAAQ,IAAIjB,EAAM,CAACpD,GAAMO,KAyB7B,OACI,yBAAKO,UAAU,eACX,yCACA,0BAAMC,SAxBGC,UACbV,EAAEW,iBACF,IACI,MAAMO,EAAQH,aAAa4B,QAAQ,cACnC,GAAGzB,EAAM,CACL,MAAM,MAAC6B,EAAD,QAAQG,EAAR,KAAiBK,EAAjB,GAAuBjC,GAAMwB,EAC7BoB,EAAU,CACZnB,QAAOG,UAASK,QAOpB,aAJM1C,IAAM+D,IAAN,qBAAwBtD,GAAM4C,EAAS,CACzC1B,QAAS,CAACC,cAAevB,KAGtB8C,EAAQG,KAAK,MAE1B,MAAOtE,GACL6D,OAAOC,SAASC,KAAO,MAOGlC,aAAa,OACnC,yBAAKlB,UAAU,OACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAO/C,KAAK,OAAOpB,MAAO6C,EAAKC,MAAOzB,GAAG,QACzC5B,KAAK,QAAQ8B,UAAQ,EAACC,SAAU1B,KAGpC,yBAAKS,UAAU,OACX,2BAAO4D,QAAQ,WAAf,WACA,8BAAU/C,KAAK,OAAOpB,MAAO6C,EAAKI,QAAS5B,GAAG,UAC9C5B,KAAK,UAAU8B,UAAQ,EAAC6C,KAAK,KAAK5C,SAAU1B,KAGhD,2BAAOqE,QAAQ,QAAf,SAA6BtB,EAAKS,KAAlC,KACA,yBAAK/C,UAAU,OACX,2BAAOa,KAAK,OAAOC,GAAG,OACtB5B,KAAK,OAAO+B,SAAU1B,KAG1B,4BAAQsB,KAAK,UAAb,UCzED,SAASwD,EAAT,GAA8B,IAAf,WAACvF,GAAa,EACxC,OACI,kBAAC,IAAD,KACA,yBAAKkB,UAAU,cACX,kBAAC,EAAD,CAAQlB,WAAYA,IACpB,iCACI,kBAAC,IAAD,CAAOwF,KAAK,IAAIC,UAAW/C,EAAMgD,OAAK,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWjB,EAAYkB,OAAK,IAClD,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWT,EAAUU,OAAK,OCsBnDC,MA/Bf,WACE,MAAOC,EAAS5F,GAAcG,oBAAS,GAmBvC,OAjBAiD,oBAAU,KACWhC,WACjB,MAAMQ,EAAQH,aAAa4B,QAAQ,cACnC,GAAGzB,EAAM,CACP,MAAMiE,QAAiBtE,IAAM0B,IAAI,gBAAgB,CAC/CC,QAAQ,CAAEC,cAAevB,KAI3B,GAFAkE,QAAQC,IAAIF,GACZ7F,EAAW6F,EAASlE,OACC,IAAlBkE,EAASlE,KAAuBF,aAAagB,aAEhDzC,GAAW,IAGfgG,IACC,IAGD,yBAAK9E,UAAU,OAEX0E,EACE,kBAACL,EAAD,CAAOvF,WAAYA,IACnB,kBAACD,EAAD,CAAOC,WAAYA,MCnBTiG,QACW,cAA7B7B,OAAOC,SAAS6B,UAEe,UAA7B9B,OAAOC,SAAS6B,UAEhB9B,OAAOC,SAAS6B,SAASjB,MACvB,2DCZNkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAKC,IACJA,EAAaC,eAEdC,MAAM3C,IACL2B,QAAQ3B,MAAMA,EAAM4C,a","file":"static/js/main.4cf09e25.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function Login({setIsLogin}) {\r\n    const [user, setUser] = useState({name: '',email: '',password: '' })\r\n    const [err, setErr] = useState('')\r\n\r\n    const onChangeInput = e =>{\r\n        const {name, value} = e.target;\r\n        setUser({...user, [name]:value})\r\n        setErr('')\r\n    }\r\n\r\n    const registerSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            const res = await axios.post('/users/register',{\r\n                username: user.name,\r\n                email: user.email,\r\n                password: user.password\r\n            })\r\n            setUser({name: '', email: '', password: ''})\r\n            setErr(res.data.msg)\r\n        } catch (err) {\r\n            err.response.data.msg && setErr(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const loginSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            const res = await axios.post('/users/login',{\r\n                email: user.email,\r\n                password: user.password\r\n            })\r\n            setUser({name: '', email: '', password: ''})\r\n            localStorage.setItem('tokenStore', res.data.token)\r\n            setIsLogin(true)\r\n        } catch (err) {\r\n            err.response.data.msg && setErr(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const [onLogin, setOnLogin] = useState(false)\r\n    const style = {\r\n        visibility: onLogin ? \"visible\" : \"hidden\",\r\n        opacity: onLogin ? 1 : 0\r\n    }\r\n\r\n    return (\r\n       <section className=\"login-page\">\r\n           <div className=\"login create-note\">\r\n                <h2>Login</h2>\r\n                <form onSubmit={loginSubmit}>\r\n                    <input type=\"email\" name=\"email\" id=\"login-email\"\r\n                    placeholder=\"Email\" required value={user.email}\r\n                    onChange={onChangeInput} />\r\n\r\n                    <input type=\"password\" name=\"password\" id=\"login-password\"\r\n                    placeholder=\"Password\" required value={user.password}\r\n                    autoComplete=\"true\"\r\n                    onChange={onChangeInput} />\r\n\r\n                    <button type=\"submit\">Login</button>\r\n                    <p>You don't have an account?\r\n                        <span onClick={() => setOnLogin(true)}> Register Now</span>\r\n                    </p>\r\n                    <h3>{err}</h3>\r\n                </form>\r\n           </div>\r\n           <div className=\"register create-note\" style={style}>\r\n           <h2>Register</h2>\r\n                <form onSubmit={registerSubmit}>\r\n                    <input type=\"text\" name=\"name\" id=\"register-name\"\r\n                    placeholder=\"User Name\" required value={user.name}\r\n                    onChange={onChangeInput} />\r\n\r\n                    <input type=\"email\" name=\"email\" id=\"register-email\"\r\n                    placeholder=\"Email\" required value={user.email}\r\n                    onChange={onChangeInput} />\r\n\r\n                    <input type=\"password\" name=\"password\" id=\"register-password\"\r\n                    placeholder=\"Password\" required value={user.password}\r\n                    autoComplete=\"true\" onChange={onChangeInput} />\r\n\r\n                    <button type=\"submit\">Register</button>\r\n                    <p>You have an account?\r\n                        <span onClick={() => setOnLogin(false)}> Login Now</span>\r\n                    </p>\r\n                    <h3>{err}</h3>\r\n                </form>\r\n           </div>\r\n       </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Nav({setIsLogin}) {\r\n\r\n    const logoutSubmit = () =>{\r\n        localStorage.clear()\r\n        setIsLogin(false)\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"logo\">\r\n                <h1><Link to=\"/\">NOTES FOR 10CG</Link></h1>\r\n            </div>\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/create\">Create Note</Link></li>\r\n                <li onClick={logoutSubmit}><Link to=\"/\">Logout</Link></li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'timeago.js';\r\nimport axios from 'axios';\r\n\r\nexport default function Home() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const getNotes = async (token) => {\r\n    const res = await axios.get('api/notes', {\r\n      headers: { Authorization: token },\r\n    });\r\n    setNotes(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('tokenStore');\r\n    setToken(token);\r\n    if (token) {\r\n      getNotes(token);\r\n    }\r\n  }, []);\r\n\r\n  const deleteNote = async (id) => {\r\n    try {\r\n      if (token) {\r\n        await axios.delete(`api/notes/${id}`, {\r\n          headers: { Authorization: token },\r\n        });\r\n        getNotes(token);\r\n      }\r\n    } catch (error) {\r\n      window.location.href = '/';\r\n    }\r\n  };\r\n\r\n  const filteredNotes = notes.filter(\r\n    (note) =>\r\n      note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      note.content.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n    <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"search-input\"\r\n        />\r\n      </div>\r\n    <div className=\"note-wrapper\">\r\n      \r\n      {filteredNotes.map((note) => (\r\n        <div className=\"card\" key={note._id}>\r\n          <h4 title={note.title}>{note.title}</h4>\r\n          <div className=\"text-wrapper\">\r\n            <p>{note.content}</p>\r\n          </div>\r\n          <p className=\"date\">{format(note.date)}</p>\r\n          <div className=\"card-footer\">\r\n            {note.name}\r\n            <Link to={`edit/${note._id}`}>Edit</Link>\r\n          </div>\r\n          <button className=\"close\" onClick={() => deleteNote(note._id)}>\r\n            X\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function CreateNote() {\r\n    const [note, setNote] = useState({\r\n        title: '',\r\n        content: '',\r\n        date: ''\r\n    })\r\n    const history = useHistory()\r\n\r\n    const onChangeInput = e => {\r\n        const {name, value} = e.target;\r\n        setNote({...note, [name]:value})\r\n    }\r\n\r\n\r\n    const createNote = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            const token = localStorage.getItem('tokenStore')\r\n            if(token){\r\n                const {title, content, date} = note;\r\n                const newNote = {\r\n                    title, content, date\r\n                }\r\n\r\n                await axios.post('/api/notes', newNote, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                \r\n                return history.push('/')\r\n            }\r\n        } catch (err) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-note\">\r\n            <h2>Create Note</h2>\r\n            <form onSubmit={createNote} autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" value={note.title} id=\"title\"\r\n                    name=\"title\" required onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea type=\"text\" value={note.content} id=\"content\"\r\n                    name=\"content\" required rows=\"10\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <label htmlFor=\"date\">Date: {note.date} </label>\r\n                <div className=\"row\">\r\n                    <input type=\"date\" id=\"date\"\r\n                    name=\"date\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <button type=\"submit\">Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function EditNote({match}) {\r\n    const [note, setNote] = useState({\r\n        title: '',\r\n        content: '',\r\n        date: '',\r\n        id: ''\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() =>{\r\n        const getNote = async () =>{\r\n            const token = localStorage.getItem('tokenStore')\r\n            if(match.params.id){\r\n                const res = await axios.get(`/api/notes/${match.params.id}`, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setNote({\r\n                    title: res.data.title,\r\n                    content: res.data.content,\r\n                    date: new Date(res.data.date).toLocaleDateString(),\r\n                    id: res.data._id\r\n                })\r\n            }\r\n        }\r\n        getNote()\r\n    },[match.params.id])\r\n\r\n    const onChangeInput = e => {\r\n        const {name, value} = e.target;\r\n        setNote({...note, [name]:value})\r\n    }\r\n\r\n\r\n    const editNote = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            const token = localStorage.getItem('tokenStore')\r\n            if(token){\r\n                const {title, content, date, id} = note;\r\n                const newNote = {\r\n                    title, content, date\r\n                }\r\n\r\n                await axios.put(`/api/notes/${id}`, newNote, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                \r\n                return history.push('/')\r\n            }\r\n        } catch (err) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-note\">\r\n            <h2>Edit Note</h2>\r\n            <form onSubmit={editNote} autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" value={note.title} id=\"title\"\r\n                    name=\"title\" required onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea type=\"text\" value={note.content} id=\"content\"\r\n                    name=\"content\" required rows=\"10\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <label htmlFor=\"date\">Date: {note.date} </label>\r\n                <div className=\"row\">\r\n                    <input type=\"date\" id=\"date\"\r\n                    name=\"date\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <button type=\"submit\">Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Header from './notes/Nav'\r\nimport Home from './notes/Home'\r\nimport CreateNote from './notes/CreateNote'\r\nimport EditNote from './notes/EditNote'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\n\r\nexport default function Notes({setIsLogin}) {\r\n    return (\r\n        <Router>\r\n        <div className=\"notes-page\">\r\n            <Header setIsLogin={setIsLogin} />\r\n            <section>\r\n                <Route path=\"/\" component={Home} exact />\r\n                <Route path=\"/create\" component={CreateNote} exact />\r\n                <Route path=\"/edit/:id\" component={EditNote} exact />\r\n            </section>\r\n            \r\n        </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport Login from './components/Login'\r\nimport Notes from './components/Notes'\r\n\r\n\r\nfunction App() {\r\n  const [isLogin, setIsLogin] = useState(false)\r\n\r\n  useEffect(() =>{\r\n    const checkLogin = async () =>{\r\n      const token = localStorage.getItem('tokenStore')\r\n      if(token){\r\n        const verified = await axios.get('/users/verify',{\r\n          headers:{ Authorization: token}\r\n        })\r\n        console.log(verified)\r\n        setIsLogin(verified.data)\r\n        if(verified.data === false) return localStorage.clear()\r\n      }else{\r\n        setIsLogin(false)\r\n      }\r\n    }\r\n    checkLogin()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n        isLogin \r\n        ? <Notes setIsLogin={setIsLogin} /> \r\n        : <Login setIsLogin={setIsLogin} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}